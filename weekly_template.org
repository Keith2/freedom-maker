# -*- mode: org; fill-column: 80; mode: auto-fill; -*-

#+TITLE:     FreedomBox Weekly Image Report
#+AUTHOR:    Nick Daly
#+EMAIL:     nick.m.daly@gmail.com
#+DATE:      
#+LANGUAGE:  en
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

Hi folks, welcome to the Nth weekly FreedomBox test image and progress report.
These images are a way to test the current (incomplete) FreedomBox build.

* TODO Release Todos [0/11]                                        :noexport:
  SCHEDULED: <2013-03-10 Sun ++1w> DEADLINE: <2013-03-03 Sun ++1w -2d>
  - State "DONE"       from "TODO"       [2013-02-26 Tue 20:22]
  :PROPERTIES:
  :LAST_REPEAT: [2013-02-26 Tue 20:22]
  :END:

** TODO Change the [[weekly_template.org::6][date]]

** TODO Change the [[Hi%20folks,%20welcome%20to%20the%20Nth%20weekly%20FreedomBox%20test%20image%20and][number]]

** TODO List new [[*What%20Does%20it%20Do?][capabilities]]

** TODO List unresolved [[*Issues][issues]]

** TODO List new [[*Changes][changes]]

** TODO Update TODOs [0/2]

   - [ ] [[*Outstanding%20TODOs][outstanding TODOs]]

   - [ ] [[http://wiki.debian.org/FreedomBox/BetaReleaseTodos][Wiki TODOs]]

** TODO Spell check!!!

** TODO Recompile [[weekly_template.org::74][gpg-verify]]

** TODO Recompile [[weekly_template.org::88][checksums]]

** TODO Export the thing to text.

** TODO Export to HTML

* Introduction

  These images include several FreedomBox-related projects.  The changes are
  changes made by project contributors in the last week that have made it into
  the test image.  The outstanding TODOs are the changes needed before the
  beta-release is complete.  If you'd like to contribute in any way, fork and
  send me a pull request.

  The image is available at:

      https://download.internetmachines.co.uk/tracker/freedombox-images/

      https://www.betweennowhere.net/tracker/freedombox-unstable.torrent

      https://www.betweennowhere.net/tracker/freedombox-unstable.tar.bz2

      https://www.betweennowhere.net/tracker/freedombox-images/

  Today's image was produced with:

      : $ make weekly-image

* What Does it Do?

  Right now, it serves as a privacy protecting proxy.

* How do I try it out?

  There are two ways you can test it out.  The easy way is to use VirtualBox and
  run the image in a virtual machine.  These instructions have more details:

      http://wiki.debian.org/FreedomBox/VirtualBoxImages

  You can also install the image to your DreamPlug directly.  If you've bought
  your own DreamPlug, you'll probably need to flash the firmware, which requires
  a JTAG.  Follow these instructions:

      http://wiki.debian.org/FreedomBox/Firmware

  These are the users and their passwords:

  - root :: freedom

      The root user.

  - fbx :: frdm

      The normal user.  All the FreedomBox tools are stored in =/home/fbx=.

  - plinth :: config

      The system maintenance user.  Generic FreedomBox maintenance will be
      conducted by this user.

* Verification

  You can validate that the files have been downloaded correctly and haven't
  changed since I've published them by checking the files' signatures.

  First, download my key:

      : $ gpg --keyserver hkp://keys.gnupg.net --recv-key D95C32042EE54FFDB25EC3489F2733F40928D23A

  Then, verify each file's signature:

#+source: verify-files
#+headers: :results output
#+begin_src sh :exports none
ls -1 *bz2
#+end_src
#+name: gpg-verify
#+begin_src python :results output :var files=verify-files :exports none
  for afile in files.splitlines():
      print ("$ gpg --verify {0}.sig {0}".format(afile))
#+end_src
#+results: gpg-verify
: $ gpg --verify freedombox-unstable_2012.0915_dreamplug-armel-card.img.tar.bz2.sig.sig freedombox-unstable_2012.0915_dreamplug-armel-card.img.tar.bz2.sig
: $ gpg --verify freedombox-unstable_2012.0915_virtualbox-i386-hdd.vdi.tar.bz2.sig.sig freedombox-unstable_2012.0915_virtualbox-i386-hdd.vdi.tar.bz2.sig

  The checksums for each file, useful for additional verification, also follow.
#+name: checksums
#+source: checksums
#+begin_src python :var files=verify-files :exports none
  import subprocess

  def get_sums(afile):
      data = list()

      for executable in ("md5sum", "sha512sum"):
          x = subprocess.Popen([executable, afile], stdout=subprocess.PIPE)
          x.wait()
          data.append(x.communicate()[0].split()[0])

      return data

  all_data = list()

  for file in files.splitlines():
      file = file.strip()
      if not file: continue
      all_data.append([file] + get_sums(file))

  return all_data
#+end_src

** ~ ~

| md5sum    | |
| sha512sum | |

** ~ ~

| md5sum    | |
| sha512sum | |

* Issues

* Changes

* Outstanding TODOs

  See the [[http://wiki.debian.org/FreedomBox/BetaReleaseTodos][beta-release TODOs]] and the [[http://wiki.debian.org/FreedomBox/1.0Todos][1.0-release TODOs]] for details.  Please take
  entries off the list and help finish them.

Enjoy!
Nick
